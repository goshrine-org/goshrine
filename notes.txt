On presence
-----------

The websocket presence issue happens when keeping track of a room/channel list
that persists independently of the ASGI server.  We will outline the problem
below with the daphne ASGI server in mind, although the problem is generic.

The daphne server in django-channels daphne uses autobahn with auto-pings,
leading to disconnect() events if clients disappear uncleanly.  The default
daphne websocket ping interval is set to 20 seconds, and the timeout is set to
30 seconds.  This means the total interval for expiration is 50 seconds.

However, disconnect() events do not fire in case daphne terminates uncleanly.
In this case the websockets will disappear, but because the room/channel list
persists independently to daphne it will be in an inconsistent state.

This can be easily reproduced as follows:
  1/ User A joins room 1
  2/ User B joins room 1
  3/ Terminate daphne uncleanly (ctrl+c)
  4/ User B leaves room 1
  5/ Restart daphne

In this scenario there will be a lingering entry for the channel related to
user B in the database, yet there is no associated websocket.

This problem is easy to solve in case of a single daphne instance: because
when daphne terminates all websockets are gone, we can simply clean the
room/channel list from the database during startup.

However, the problem becomes more complex when multiple daphne servers are
involved, and only one of them is restarted uncleanly.

celery worker -A goshrine -B -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler

Importing old users
-------------------
goshrine=# alter sequence users_user_id_seq restart with 20000;

